###
### **nfloat.h** -- packed floating-point numbers with n-word precision
###

### Types, macros and constants

### Context objects
arbcall"int nfloat_ctx_init(gr_ctx_t ctx, slong prec, int flags)"

### Basic operations and arithmetic
#ni arbcall"int nfloat_ctx_write(gr_stream_t out, gr_ctx_t ctx)"
arbcall"void nfloat_init(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"void nfloat_clear(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"void nfloat_swap(nfloat_ptr x, nfloat_ptr y, gr_ctx_t ctx)"
arbcall"int nfloat_set(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_equal(nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_ctx_set_real_prec(gr_ctx_t ctx, slong prec)"
arbcall"int nfloat_ctx_get_real_prec(slong * res, gr_ctx_t ctx)"
arbcall"int nfloat_zero(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"int nfloat_one(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"int nfloat_neg_one(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"int nfloat_pos_inf(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"int nfloat_neg_inf(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"int nfloat_nan(nfloat_ptr res, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_is_zero(nfloat_srcptr x, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_is_one(nfloat_srcptr x, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_is_neg_one(nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_set_ui(nfloat_ptr res, ulong x, gr_ctx_t ctx)"
arbcall"int nfloat_set_si(nfloat_ptr res, slong x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_set_fmpz(nfloat_ptr res, const fmpz_t x, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_set_mpn_2exp(nfloat_ptr res, nn_srcptr x, slong xn, slong exp, int xsgnbit, gr_ctx_t ctx)"
#ni arbcall"int nfloat_set_mpn_2exp(nfloat_ptr res, nn_srcptr x, slong xn, slong exp, int xsgnbit, gr_ctx_t ctx)"
arbcall"int nfloat_set_arf(nfloat_ptr res, const arf_t x, gr_ctx_t ctx)"
arbcall"int nfloat_get_arf(arf_t res, nfloat_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_set_fmpq(nfloat_ptr res, const fmpq_t v, gr_ctx_t ctx)"
arbcall"int nfloat_set_d(nfloat_ptr res, double x, gr_ctx_t ctx)"
arbcall"int nfloat_set_str(nfloat_ptr res, const char * x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_set_other(nfloat_ptr res, gr_srcptr x, gr_ctx_t x_ctx, gr_ctx_t ctx)"
#ni arbcall"int nfloat_write(gr_stream_t out, nfloat_srcptr x, gr_ctx_t ctx)"
#ns arbcall"int nfloat_randtest(nfloat_ptr res, flint_rand_t state, gr_ctx_t ctx)"
#ni arbcall"int nfloat_cmp(int * res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_cmpabs(int * res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_neg(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_abs(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_add(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_sub(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_mul(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_submul(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_addmul(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_sqr(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_mul_2exp_si(nfloat_ptr res, nfloat_srcptr x, slong y, gr_ctx_t ctx)"
arbcall"int nfloat_inv(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_div(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_div_ui(nfloat_ptr res, nfloat_srcptr x, ulong y, gr_ctx_t ctx)"
arbcall"int nfloat_div_si(nfloat_ptr res, nfloat_srcptr x, slong y, gr_ctx_t ctx)"
arbcall"int nfloat_sqrt(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_rsqrt(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_sgn(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_im(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_floor(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_ceil(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_trunc(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_nint(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_pow(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int nfloat_pi(nfloat_ptr res, gr_ctx_t ctx)"
arbcall"int nfloat_exp(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_expm1(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_log(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_log1p(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_sin(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_cos(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_tan(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_sinh(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_cosh(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_tanh(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_atan(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_gamma(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"
arbcall"int nfloat_zeta(nfloat_ptr res, nfloat_srcptr x, gr_ctx_t ctx)"

### Vector functions
arbcall"void _nfloat_vec_init(nfloat_ptr res, slong len, gr_ctx_t ctx)"
arbcall"void _nfloat_vec_clear(nfloat_ptr res, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_set(nfloat_ptr res, nfloat_srcptr x, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_zero(nfloat_ptr res, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_add(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_sub(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_mul(nfloat_ptr res, nfloat_srcptr x, nfloat_srcptr y, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_mul_scalar(nfloat_ptr res, nfloat_srcptr x, slong len, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_addmul_scalar(nfloat_ptr res, nfloat_srcptr x, slong len, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_submul_scalar(nfloat_ptr res, nfloat_srcptr x, slong len, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_dot(nfloat_ptr res, nfloat_srcptr initial, int subtract, nfloat_srcptr x, nfloat_srcptr y, slong len, gr_ctx_t ctx)"
arbcall"int _nfloat_vec_dot_rev(nfloat_ptr res, nfloat_srcptr initial, int subtract, nfloat_srcptr x, nfloat_srcptr y, slong len, gr_ctx_t ctx)"

### Matrix functions
#ni arbcall"int nfloat_mat_mul_fixed(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, slong max_extra_prec, gr_ctx_t ctx)"
#ni arbcall"int nfloat_mat_mul_block(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, slong min_block_size, gr_ctx_t ctx)"
#ni arbcall"int nfloat_mat_mul(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, gr_ctx_t ctx)"
#ni arbcall"int nfloat_mat_nonsingular_solve_tril(gr_mat_t X, const gr_mat_t L, const gr_mat_t B, int unit, gr_ctx_t ctx)"
#ni arbcall"int nfloat_mat_nonsingular_solve_triu(gr_mat_t X, const gr_mat_t L, const gr_mat_t B, int unit, gr_ctx_t ctx)"
#ni arbcall"int nfloat_mat_lu(slong * rank, slong * P, gr_mat_t LU, const gr_mat_t A, int rank_check, gr_ctx_t ctx)"

### Internal functions
arbcall"int _nfloat_underflow(nfloat_ptr res, int sgnbit, gr_ctx_t ctx)"
arbcall"int _nfloat_overflow(nfloat_ptr res, int sgnbit, gr_ctx_t ctx)"
arbcall"int _nfloat_cmp(nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int _nfloat_cmpabs(nfloat_srcptr x, nfloat_srcptr y, gr_ctx_t ctx)"
arbcall"int _nfloat_add_1(nfloat_ptr res, ulong x0, slong xexp, int xsgnbit, ulong y0, slong delta, gr_ctx_t ctx)"
arbcall"int _nfloat_sub_1(nfloat_ptr res, ulong x0, slong xexp, int xsgnbit, ulong y0, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_add_2(nfloat_ptr res, nn_srcptr xd, slong xexp, int xsgnbit, nn_srcptr yd, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_sub_2(nfloat_ptr res, nn_srcptr xd, slong xexp, int xsgnbit, nn_srcptr yd, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_add_3(nfloat_ptr res, nn_srcptr x, slong xexp, int xsgnbit, nn_srcptr y, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_sub_3(nfloat_ptr res, nn_srcptr x, slong xexp, int xsgnbit, nn_srcptr y, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_add_4(nfloat_ptr res, nn_srcptr x, slong xexp, int xsgnbit, nn_srcptr y, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_sub_4(nfloat_ptr res, nn_srcptr x, slong xexp, int xsgnbit, nn_srcptr y, slong delta, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_add_n(nfloat_ptr res, nn_srcptr xd, slong xexp, int xsgnbit, nn_srcptr yd, slong delta, slong nlimbs, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_sub_n(nfloat_ptr res, nn_srcptr xd, slong xexp, int xsgnbit, nn_srcptr yd, slong delta, slong nlimbs, gr_ctx_t ctx)"

### Complex numbers
arbcall"int nfloat_complex_ctx_init(gr_ctx_t ctx, slong prec, int flags)"
#ni arbcall"void nfloat_complex_init(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"void nfloat_complex_clear(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_zero(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_get_acf(acf_t res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_acf(nfloat_complex_ptr res, const acf_t x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_get_acb(acb_t res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_acb(nfloat_complex_ptr res, const acb_t x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_write(gr_stream_t out, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_randtest(nfloat_complex_ptr res, flint_rand_t state, gr_ctx_t ctx)"
#ni arbcall"void nfloat_complex_swap(nfloat_complex_ptr x, nfloat_complex_ptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set(nfloat_complex_ptr res, nfloat_complex_ptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_one(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_neg_one(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_complex_is_zero(nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_complex_is_one(nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_complex_is_neg_one(nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_i(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_pi(nfloat_complex_ptr res, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_conj(nfloat_complex_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_re(nfloat_complex_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_im(nfloat_complex_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"truth_t nfloat_complex_equal(nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_si(nfloat_complex_ptr res, slong x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_ui(nfloat_complex_ptr res, ulong x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_fmpz(nfloat_complex_ptr res, const fmpz_t x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_fmpq(nfloat_complex_ptr res, const fmpq_t x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_d(nfloat_complex_ptr res, double x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_set_other(nfloat_complex_ptr res, gr_srcptr x, gr_ctx_t x_ctx, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_neg(nfloat_complex_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_add(nfloat_complex_ptr res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_sub(nfloat_complex_ptr res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_sqr_naive(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_sqr_standard(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_sqr_karatsuba(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_sqr(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_sqr(nfloat_complex_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_mul_naive(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, nfloat_srcptr c, nfloat_srcptr d, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_mul_standard(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, nfloat_srcptr c, nfloat_srcptr d, gr_ctx_t ctx)"
arbcall"int _nfloat_complex_mul_karatsuba(nfloat_ptr res1, nfloat_ptr res2, nfloat_srcptr a, nfloat_srcptr b, nfloat_srcptr c, nfloat_srcptr d, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mul(nfloat_complex_ptr res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_inv(nfloat_complex_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_div(nfloat_complex_ptr res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mul_2exp_si(nfloat_complex_ptr res, nfloat_complex_srcptr x, slong y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_cmp(int * res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_cmpabs(int * res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_abs(nfloat_ptr res, nfloat_complex_srcptr x, gr_ctx_t ctx)"
#ni arbcall"void _nfloat_complex_vec_init(nfloat_complex_ptr res, slong len, gr_ctx_t ctx)"
#ni arbcall"void _nfloat_complex_vec_clear(nfloat_complex_ptr res, slong len, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_complex_vec_zero(nfloat_complex_ptr res, slong len, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_complex_vec_set(nfloat_complex_ptr res, nfloat_complex_srcptr x, slong len, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_complex_vec_add(nfloat_complex_ptr res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, slong len, gr_ctx_t ctx)"
#ni arbcall"int _nfloat_complex_vec_sub(nfloat_complex_ptr res, nfloat_complex_srcptr x, nfloat_complex_srcptr y, slong len, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_mul_fixed(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, slong max_extra_prec, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_mul_block(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, slong min_block_size, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_mul_reorder(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_mul(gr_mat_t C, const gr_mat_t A, const gr_mat_t B, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_nonsingular_solve_tril(gr_mat_t X, const gr_mat_t L, const gr_mat_t B, int unit, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_nonsingular_solve_triu(gr_mat_t X, const gr_mat_t L, const gr_mat_t B, int unit, gr_ctx_t ctx)"
#ni arbcall"int nfloat_complex_mat_lu(slong * rank, slong * P, gr_mat_t LU, const gr_mat_t A, int rank_check, gr_ctx_t ctx)"

### Packed fixed-point arithmetic
#ni arbcall"void _nfixed_print(nn_srcptr x, slong nlimbs, slong exp)"
#ni arbcall"void _nfixed_vec_add(nn_ptr res, nn_srcptr a, nn_srcptr b, slong len, slong nlimbs)"
#ni arbcall"void _nfixed_vec_sub(nn_ptr res, nn_srcptr a, nn_srcptr b, slong len, slong nlimbs)"
#ni arbcall"void _nfixed_dot_2(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_dot_3(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_dot_4(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_dot_5(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_dot_6(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_dot_7(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_dot_8(nn_ptr res, nn_srcptr x, slong xstride, nn_srcptr y, slong ystride, slong len)"
#ni arbcall"void _nfixed_mat_mul_classical_precise(nn_ptr C, nn_srcptr A, nn_srcptr B, slong m, slong n, slong p, slong nlimbs)"
#ni arbcall"void _nfixed_mat_mul_classical(nn_ptr C, nn_srcptr A, nn_srcptr B, slong m, slong n, slong p, slong nlimbs)"
#ni arbcall"void _nfixed_mat_mul_waksman(nn_ptr C, nn_srcptr A, nn_srcptr B, slong m, slong n, slong p, slong nlimbs)"
#ni arbcall"void _nfixed_mat_mul_strassen(nn_ptr C, nn_srcptr A, nn_srcptr B, slong m, slong n, slong p, slong cutoff, slong nlimbs)"
#ni arbcall"void _nfixed_mat_mul(nn_ptr C, nn_srcptr A, nn_srcptr B, slong m, slong n, slong p, slong nlimbs)"
arbcall"void _nfixed_mat_mul_bound_classical(double * bound, double * error, slong m, slong n, slong p, double A, double B, slong nlimbs)"
arbcall"void _nfixed_mat_mul_bound_waksman(double * bound, double * error, slong m, slong n, slong p, double A, double B, slong nlimbs)"
arbcall"void _nfixed_mat_mul_bound_strassen(double * bound, double * error, slong m, slong n, slong p, double A, double B, slong cutoff, slong nlimbs)"
arbcall"void _nfixed_mat_mul_bound(double * bound, double * error, slong m, slong n, slong p, double A, double B, slong nlimbs)"
arbcall"void _nfixed_complex_mat_mul_bound(double * bound, double * error, slong m, slong n, slong p, double A, double B, double C, double D, slong nlimbs)"
